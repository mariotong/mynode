/**
 * Created by Administrator on 2016/3/11.
 */
/*
JavaScript 语言自身只有字符串数据类型，没有二进制数据类型。
但在处理像TCP流或文件流时，必须使用到二进制数据。因此在 Node.js中，定义了一个 Buffer 类，该类用来创建一个专门存放二进
制数据的缓存区。在 Node.js 中，Buffer 类是随 Node 内核一起发布的核心库。Buffer 库为 Node.js 带来了一种存储原始数据的方法
，可以让 Node.js 处理二进制数据，每当需要在 Node.js 中处理I/O操作中移动的数据时，就有可能使用 Buffer 库。原始数据存储在
Buffer 类的实例中。一个 Buffer 类似于一个整数数组，但它对应于 V8 堆内存之外的一块原始内存。*/
//#二进制
//0和1比特bit位，是计算机系统中数据的原始单位
//1 1 1 1 1 1 1 1
//16 8 4 2 0
var sum=0;
for(var i=0;i<8;i++){
    sum+=Math.pow(2,i);
}
console.log(sum);//最大值全是1，对应十进制255
//二进制到文本
//计算机只认识0和1
//我们只认识 a b c 中国 字符
//编码系统用于将二进制转化为文本
//ASCII 英文字母 数字 标识符号 一共128个 0-127
//但是由于世界上语言众多，ASCII不能表示所有语言，所以web上使用最多的是
//utf-8 ,它可以表示世界上绝大多数的字符
//node.js 如何处理二进制
//js可以很好的处理unicode,不能处理二进制
//tcp 发送和接收数据
//对图片进行压缩传输
//从http里读取客户端传过来的请求体
//buffer
//缓存区，处理二进制的一种方式，是对原始内存的分配
//buffer 是由字节组成 8个bit











